{"version":3,"sources":["Components/AllData.js","Components/Balance.js","Components/CreateAccount.js","Components/Deposit.js","Components/Images/BBLogo.png","Components/Home.js","Components/Login.js","Components/Withdraw.js","Components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["AllData","users","dataList","map","user","name","email","password","_id","className","scope","Balance","useContext","UserContext","balance","CreateAccount","setUsers","useState","setName","setEmail","setPassword","success","setSuccess","btnDisable","setBtnDisable","passwordError","setPasswordError","nameError","setNameError","emailError","setEmailError","handleSubmit","url","a","fetch","res","json","data","console","log","handleChange","e","validated","target","id","value","length","type","onClick","placeholder","onChange","minLength","disabled","Deposit","depositAmt","setDepositAmt","negError","setNegError","newBalance","Number","updateBalance","min","undefined","Home","src","BBLogo","alt","Login","loggedIn","setLoggedIn","onsubmit","Withdraw","withdrawalAmt","setWithdrawalAmt","warnOverdraft","setWarnOverdraft","NavBar","to","title","path","createContext","App","currentUser","useEffect","then","response","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.964e282b.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst AllData = ({ users }) => {\r\n  \r\n  const dataList = users.map(user => {\r\n      return (\r\n      <tr key={user._id}>\r\n        <td>{user.name}</td>\r\n        <td>{user.email}</td>\r\n        <td>{user.password}</td>\r\n      </tr>\r\n      )\r\n  });\r\n  \r\n  \r\n  \r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h2>All User Data</h2>\r\n        </div>\r\n        { users ? \r\n          <div className=\"tableDiv\">\r\n            <table className=\"table table-striped table-hover \">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Name</th>\r\n                  <th scope=\"col\">Email</th>\r\n                  <th scope=\"col\">Password</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {dataList}\r\n              </tbody>\r\n            </table>\r\n          </div> \r\n          : \r\n          <h4>No user data currently available.</h4>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllData\r\n","import { useContext } from \"react\";\r\nimport { UserContext } from \"../App\";\r\n\r\nconst Balance = () => {\r\n\r\n  const user = useContext(UserContext);\r\n  const balance = user.balance;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h2>Your Current Balance:</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text\"><strong>${balance}</strong></p>\r\n          {balance <= 0 ? <p className=\"negative\">You need to deposit funds before making any withdrawals.</p>: <p>Welcome, {user.name}! Do you want to make a deposit or withdrawal today? If so--just select the correct action above.</p>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import { useState } from 'react';\r\n\r\nconst CreateAccount = ({ setUsers, users }) => {\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const [btnDisable, setBtnDisable] = useState(true);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [nameError, setNameError] = useState(false);\r\n  const [emailError, setEmailError] = useState(false);\r\n\r\n  const handleSubmit = () => {\r\n    const url = `/account/create/${name}/${email}/${password}`;\r\n    (async () => {\r\n      const res = await fetch(url);\r\n      const data = await res.json();\r\n      console.log(data);\r\n    })();\r\n    setSuccess(true);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    let validated = false; \r\n\r\n    if(e.target.id === 'name'){\r\n      setName(e.target.value);\r\n      if(e.target.value !== '' && email !== '' && password !== ''){\r\n        validated = true;\r\n      } else {\r\n        validated = false;\r\n      }\r\n      if(e.target.value === ''){\r\n        setNameError(true);\r\n      } else {\r\n        setNameError(false);\r\n      }\r\n    }\r\n\r\n    if(e.target.id === 'email'){\r\n      setEmail(e.target.value);\r\n      if(e.target.value !== '' && name !== '' && password !== ''){\r\n        validated = true;\r\n      } else {\r\n        validated = false;\r\n      }\r\n      if(e.target.value === ''){\r\n        setEmailError(true);\r\n      } else {\r\n        setEmailError(false);\r\n      }\r\n      if(name === ''){\r\n        setNameError(true);\r\n      }\r\n    }\r\n\r\n    if(e.target.id === 'password') {\r\n      setPassword(e.target.value);\r\n      if(e.target.value !== '' && e.target.value.length >= 8 && name !== '' && password !== ''){\r\n        validated = true;\r\n      } else {\r\n        validated = false;\r\n      }\r\n      if(e.target.value.length < 8) {\r\n        setPasswordError(true);\r\n      } else {\r\n        setPasswordError(false);\r\n      }\r\n      if(name === ''){\r\n        setNameError(true);\r\n      }\r\n      if(email === ''){\r\n        setEmailError(true);\r\n      }\r\n    }\r\n    \r\n    if(e.target.value === ''){\r\n      setBtnDisable(true);\r\n    } \r\n    if(e.target.value !== '' && validated) {\r\n      setBtnDisable(false);\r\n    }\r\n\r\n  }\r\n\r\n  const handleCreateUser = () => {\r\n    setSuccess(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h2>Create Account</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n        {success === true ? \r\n          <>\r\n          <p className=\"card-text\">Congratulations, you have successfully created an account with Bad Bank! If you would like to create another account, please click below.</p>\r\n          <button type=\"button\" onClick={handleCreateUser} className=\"btn btn-dark\">Create Another Account</button>\r\n          </>\r\n          : \r\n          <>\r\n            <h4>Please fill out this form to create your new Bad Bank account.</h4> \r\n            <p className=\"card-text\">Please note, you will not be able to submit the form without first providing a name, email address, and password of at least 8 characters length.</p>\r\n            <form>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Name: </label><br />\r\n                <input type=\"text\" placeholder=\"Your Name\" id=\"name\" onChange={handleChange} className=\"form-control\" />\r\n                {nameError ? <p className=\"negative smallP\">You must enter a name to submit the form.</p> : null }\r\n                <label className=\"form-label\">Email: </label> <br />\r\n                <input type=\"email\" placeholder=\"Your Email Address\" id=\"email\" onChange={handleChange} className=\"form-control\" />\r\n                {emailError ? <p className=\"negative smallP\">You must enter an email address to submit the form.</p> : null }\r\n                <label className=\"form-label\">Password:</label> <br />\r\n                <input type=\"password\" minLength=\"8\" placeholder=\"Password\" id=\"password\" onChange={handleChange} className=\"form-control\" /> \r\n                {passwordError ? <p className=\"negative smallP\">Your password must be at least 8 characters long.</p> : null }\r\n                <br />\r\n                {btnDisable ? <button type=\"button\" disabled={true} onClick={handleSubmit} className=\"btn btn-dark\">Create an Account</button> : <button type=\"button\" disabled={false} onClick={handleSubmit} className=\"btn btn-dark\">Create an Account</button>}\r\n                \r\n              </div>\r\n            </form>\r\n          </>\r\n        }\r\n        </div>           \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateAccount\r\n","import { useState, useContext } from 'react';\r\nimport { UserContext } from '../App';\r\n\r\nconst Deposit = () => {\r\n\r\n  const [ depositAmt, setDepositAmt ] = useState(0);\r\n  const [ success, setSuccess ] = useState(false);\r\n  const [ btnDisable, setBtnDisable ] = useState(true);\r\n  const [ negError, setNegError ] = useState(false);\r\n\r\n  const user = useContext(UserContext);\r\n  const balance = user.balance;\r\n\r\n  const handleChange = (e) => {\r\n    setDepositAmt(e.target.value);\r\n    console.log(e.target.value);\r\n    if(e.target.value !== undefined || null || '') {\r\n      setBtnDisable(false);\r\n    } \r\n    if (e.target.value === '') {\r\n      setBtnDisable(true);\r\n    }\r\n    if (e.target.value <= 0){\r\n      setBtnDisable(true);\r\n      setNegError(true);\r\n    } else {\r\n      setNegError(false);\r\n    }\r\n  }\r\n\r\n  const updateBalance = () => {\r\n    let newBalance = Number(balance) + Number(depositAmt);\r\n    console.log('new balance: ' + newBalance);\r\n    user.balance = newBalance;\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    updateBalance();\r\n    setDepositAmt(0);\r\n    setSuccess(true);\r\n  }\r\n\r\n  const handleAddition = () => {\r\n    setSuccess(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h2>Make a Deposit:</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text\">Your current account balance is: <strong>${balance}</strong></p>\r\n          {success ? \r\n            <>\r\n            <p>You have successfully made your deposit. Thank you for using Bad Bank! For any of your additional banking needs, please select the desired action above.</p> \r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={handleAddition}>Make Another Deposit</button>\r\n            </>\r\n            : \r\n            <form>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Enter Your Deposit Amount:</label>\r\n                <input type=\"number\" min=\"0\" placeholder=\"Deposit Amount\" className=\"form-control\" onChange={handleChange} />\r\n                {negError ? <p className=\"negative smallP\">We can only accept positive number values for a deposit. If you wish to make a withdrawal, please go to the \"Withdraw\" section of the Bad Bank Website.</p> : <br /> }\r\n                {btnDisable ? <button type=\"button\" onClick={handleSubmit} className=\"btn btn-dark\" disabled={true} >Make Deposit</button> : <button type=\"button\" onClick={handleSubmit} className=\"btn btn-dark\" disabled={false} >Make Deposit</button>}\r\n              </div>            \r\n            </form>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Deposit\r\n","export default __webpack_public_path__ + \"static/media/BBLogo.e3fe1911.png\";","import BBLogo from './Images/BBLogo.png';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={BBLogo} className=\"card-img-top\" alt=\"Bad Bank Logo\"/>\r\n      <div className=\"card-body\">\r\n        <h2 className=\"card-title\">Bad Bank Home</h2>\r\n        <p className=\"card-text\">We would like to welcome you to Bad Bank! We're not a very good bank, because we lack any security measures. You probably definitely should not trust us with your money or banking needs.</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import { useState, useContext } from 'react';\r\nimport { UserContext } from '../App';\r\n\r\nconst Login = ({loggedIn, setLoggedIn}) => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [btnDisable, setBtnDisable] = useState(true);\r\n\r\n  const user = useContext(UserContext);\r\n\r\n  //TODO write submit logic to communicate with backend to check login credentials against stored credentials\r\n  const handleSubmit = () => {\r\n    console.log('You submitted your login credentials: ' + {email} + {password});\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    let validated = false; \r\n\r\n    if(e.target.id === 'email'){\r\n      setEmail(e.target.value);\r\n      if(e.target.value !== '' && password !== ''){\r\n        validated = true;\r\n      } else {\r\n        validated = false;\r\n      }\r\n      if(e.target.value === ''){\r\n        setEmailError(true);\r\n      } else {\r\n        setEmailError(false);\r\n      }\r\n    }\r\n\r\n    if(e.target.id === 'password') {\r\n      setPassword(e.target.value);\r\n      if(e.target.value !== '' && e.target.value.length >= 8 && password !== ''){\r\n        validated = true;\r\n      } else {\r\n        validated = false;\r\n      }\r\n      if(e.target.value.length < 8) {\r\n        setPasswordError(true);\r\n      } else {\r\n        setPasswordError(false);\r\n      }\r\n      if(email === ''){\r\n        setEmailError(true);\r\n      }\r\n    }\r\n    \r\n    if(e.target.value === ''){\r\n      setBtnDisable(true);\r\n    } \r\n    if(e.target.value !== '' && validated) {\r\n      setBtnDisable(false);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h2>Login</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          {loggedIn ? \r\n          <p>Congratulations, you have successfully logged in to your account.</p>\r\n          :\r\n          <form onsubmit={handleSubmit}>\r\n            <div className=\"mb-3\">\r\n            <label className=\"form-label\">Email:</label> <br />\r\n            <input className=\"form-control\" type=\"text\" onChange={handleChange} id=\"email\" placeholder=\"Account Holder Email\"></input>\r\n            {emailError ? <p className=\"negative smallP\">You must enter a previously registered email address to login. If you do not yet have an account, go to \"Create An Account\" to sign up now.</p> : null }\r\n            <label className=\"form-label\">Password:</label> <br />\r\n            <input type=\"password\" minLength=\"8\" placeholder=\"Password\" id=\"password\" onChange={handleChange} className=\"form-control\" /> \r\n            {passwordError ? <p className=\"negative smallP\">Your password must be at least 8 characters long.</p> : null } <br />\r\n            {btnDisable ? <button type=\"button\" disabled={true} onClick={handleSubmit} className=\"btn btn-dark\">Login</button> : <button type=\"button\" disabled={false} onClick={handleSubmit} className=\"btn btn-dark\">Login</button>}\r\n            </div>\r\n          </form>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { useState, useContext } from 'react';\r\nimport { UserContext } from '../App';\r\n\r\nconst Withdraw = () => {\r\n  const [ withdrawalAmt, setWithdrawalAmt ] = useState(0);\r\n  const [ success, setSuccess ] = useState(false);\r\n  const [ warnOverdraft, setWarnOverdraft ] = useState(false);\r\n  const [ btnDisable, setBtnDisable ] = useState(true);\r\n  const [ negError, setNegError ] = useState(false);\r\n\r\n  const user = useContext(UserContext);\r\n  const balance = user.balance;\r\n\r\n  const handleChange = (e) => {\r\n    setWithdrawalAmt(e.target.value);\r\n    console.log(e.target.value);\r\n    if(warnOverdraft) setWarnOverdraft(false);\r\n    if(e.target.value !== null || undefined || '') {\r\n      setBtnDisable(false);\r\n    }\r\n    if(e.target.value === ''){\r\n      setBtnDisable(true);\r\n    }\r\n    if (e.target.value <= 0){\r\n      setBtnDisable(true);\r\n      setNegError(true);\r\n    } else {\r\n      setNegError(false);\r\n    }\r\n  }\r\n\r\n  const updateBalance = () => {\r\n    let newBalance = Number(balance) - Number(withdrawalAmt);\r\n    if(newBalance <= 0){\r\n      setWarnOverdraft(true);\r\n      return;\r\n    }\r\n    setSuccess(true);\r\n    console.log('new balance: ' + newBalance);\r\n    user.balance = newBalance;\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    updateBalance();\r\n    setWithdrawalAmt(0);\r\n  }\r\n\r\n  const handleAddition = () => {\r\n    setSuccess(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          <h2>Make a Withdrawal:</h2>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <p className=\"card-text\">Your current account balance is: <strong>${balance}</strong></p>\r\n          {warnOverdraft === true ? <p className=\"negative\">You cannot make the requested withdraw as you have insufficient funds for that amount. <br /> Please revise the requested amount below, or deposit sufficient funds prior to withdrawal.</p> : null}\r\n          {success ? \r\n            <>\r\n            <p>You have successfully made your withdrawal. Thank you for using Bad Bank! For any of your additional banking needs, please select the desired action above.</p> \r\n            <button type=\"button\" className=\"btn btn-dark\" onClick={handleAddition}>Make Another Withdrawal</button>\r\n            </>\r\n            : \r\n            <form>\r\n              <div className=\"mb-3\">\r\n                <label className=\"form-label\">Enter Your Withdrawal Amount:</label>\r\n                <input type=\"number\" min=\"0\" placeholder=\"Withdrawal Amount\" className=\"form-control\" onChange={handleChange} /> \r\n                {negError ? <p className=\"negative smallP\">We can only accept positive number values for a withdrawal. If you wish to make a deposit, please go to the \"Deposit\" section of the Bad Bank Website.</p> : <br />}\r\n                {btnDisable ? <button type=\"button\" onClick={handleSubmit} className=\"btn btn-dark\" disabled={true} >Withdraw Cash</button> : <button type=\"button\" onClick={handleSubmit} className=\"btn btn-dark\" disabled={false} >Withdraw Cash</button>}\r\n              </div>            \r\n            </form>\r\n          }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Withdraw\r\n","import {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport AllData from \"./AllData\";\r\nimport Balance from \"./Balance\";\r\nimport CreateAccount from \"./CreateAccount\";\r\nimport Deposit from \"./Deposit\";\r\nimport Home from \"./Home\";\r\nimport Login from \"./Login\";\r\nimport Withdraw from \"./Withdraw\";\r\n\r\n\r\nconst NavBar = ({ users, loggedIn, setLoggedIn }) => {\r\n\r\n  return (\r\n    <Router>\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          \r\n            <Link to=\"/\" className=\"navbar-brand\" title=\"Bad Bank Home Page\">Bad Bank</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/create-account\" className=\"nav-link\" title=\"Click here to sign up for a new account.\">Create Account</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/login\" className=\"nav-link\" title=\"If you have an existing account, click here to login.\">Login</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/deposit\" className=\"nav-link\" title=\"Make a deposit to your account.\">Deposit</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/withdraw\" className=\"nav-link\" title=\"Make a withdrawal from your account.\">Withdraw</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/balance\" className=\"nav-link\" title=\"Check your balance information.\">Balance</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link to=\"/all-data\" className=\"nav-link\" title=\"View all user data.\">All Data</Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          \r\n        </div>\r\n        </nav>\r\n\r\n        {/* switch statement checks for correct routing path */}\r\n        <Switch>\r\n          <Route path=\"/create-account\">\r\n            <CreateAccount />\r\n          </Route>\r\n          <Route path=\"/login\">\r\n            <Login loggedIn={loggedIn} setLoggedIn={setLoggedIn} />\r\n          </Route>\r\n          <Route path=\"/deposit\">\r\n            <Deposit />\r\n          </Route>\r\n          <Route path=\"/withdraw\" >\r\n            <Withdraw />\r\n          </Route>\r\n          <Route path=\"/balance\">\r\n            <Balance />\r\n          </Route>\r\n          <Route path=\"/all-data\">\r\n            <AllData users={users} />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default NavBar\r\n","import { useState, useEffect, createContext } from 'react';\r\nimport './App.css';\r\nimport NavBar from './Components/NavBar';\r\n\r\n\r\nexport const UserContext = createContext();\r\n\r\nfunction App() {\r\n  //Previous mock user data: \r\n  //[{name: 'Peter Parker', email: 'spidey@web.web', password: 'abc123security', balance: 150000}, {name: 'Dorris Day', email: 'dorris@sunshine.com', password:'singingHappy!', balance: 1000}]\r\n  const [users, setUsers] = useState();\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState({name: 'Peter Parker', email: 'spidey@web.web', password: 'abc123security', balance: 150000});\r\n  \r\n  useEffect(() => {\r\n    fetch('/account/all')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setUsers([...data]);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <UserContext.Provider value={currentUser} >\r\n      <NavBar users={users} setUsers={setUsers} loggedIn={loggedIn} setLoggedIn={setLoggedIn} />\r\n    </UserContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}